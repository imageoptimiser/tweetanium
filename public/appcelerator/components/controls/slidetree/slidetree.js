Appcelerator.UI.registerUIComponent("control","slidetree",{activeTrees:{},pageData:{},listeners:{},getAttributes:function(){var A=Appcelerator.Types;return[{name:"theme",optional:true,description:"name of theme to use for this control",type:A.identifier,defaultValue:"basic"},{name:"title",optional:true,description:"title of tree",type:A.identifier,defaultValue:"No Title"},{name:"height",optional:true,description:"height of tree container",type:A.identifier,defaultValue:"330px"},{name:"width",optional:true,description:"width of tree container",type:A.identifier,defaultValue:"300px"},{name:"rowHeight",optional:true,description:"heigt of tree rows",type:A.identifier,defaultValue:"40px"},{name:"fillEmpty",optional:true,description:"fill empty rows with row class",type:A.identifier,defaultValue:true},{name:"data",optional:true,description:"JSON data for initial population",type:A.identifier,defaultValue:null}]},getVersion:function(){return"3.0.0"},getSpecVersion:function(){return 1},click:function(E,C,D,B,A){},getConditions:function(){return["click"]},value:function(A,B,D,I,E,H,G,C){var F=Appcelerator.Compiler.findParameter(H,"property");this._initialize(A,F)},setNode:function(A,B,D,J,E,I,H,C){if(!I){$E("required attributes missing in addNode action.  you must specify both a row and a page value")}var K=Appcelerator.Compiler.findParameter(I,"row");var G=Appcelerator.Compiler.findParameter(I,"page");var F=Appcelerator.Compiler.findParameter(I,"property");if(G==null||K==null||F==null){$E("required attributes missing in addNode action.  you must specify a row, a page, and a property value");return }this._cachePageData(A,F,G,K);this._buildPage(A,F,0)},removeNode:function(A,B,D,I,E,H,G,C){if(!H){$E("required attributes missing in addNode action.  you must specify both a row and a page value")}var J=Appcelerator.Compiler.findParameter(H,"row");var F=Appcelerator.Compiler.findParameter(H,"page");if(F==null||J==null){$E("required attributes missing in addNode action.  you must specify a row, a page, and a property value");return }this.pageData[A][F][J]=null},getActions:function(){return["value","removeNode","setNode"]},build:function(D,B){var G=B.theme||Appcelerator.UI.UIManager.getDefaultTheme("tree");var F="tree_"+G;var A=document.createElement("div");A.id=D.id+"_tree";A.style.width=B.width;A.style.overflowX="hidden";A.className=F+"_container";var E=parseInt(B.width);this.activeTrees[D.id]={};this.activeTrees[D.id].width=E;this.activeTrees[D.id].theme=F;this.activeTrees[D.id].options=B;this.activeTrees[D.id].currentPage=0;this.activeTrees[D.id].totalPages=0;this.pageData[D.id]=[];var C='<div id="'+D.id+'_header_container" class="'+F+'_header_container"  style="width:'+B.width+'"></div>';A.innerHTML=C;D.appendChild(A);if(B.data!=null){this._initialize(D.id,B.data)}Appcelerator.Core.loadTheme("control","tree",G,D,B)},_initialize:function(D,C){if(C){if(this.activeTrees[D].totalPages!=0){new Effect.Move($(D+"_header_container"),{x:(this.activeTrees[D].width*this.activeTrees[D].currentPage),duration:0.5});this.activeTrees[D].currentPage=0;this.activeTrees[D].totalPages=0;this.pageData[D]=[];Appcelerator.Compiler.destroy($(D+"_header_container"),true);Appcelerator.Util.ServiceBroker.removeListener(this.listeners[D])}this._cachePageData(D,C,0);this._buildPage(D,C,0);var A=this;this.listeners[D]=$MQL(D+"_tree_shift",function(G,I,F,J){var H=A.activeTrees[D].currentPage;if(I.dir=="left"){A.activeTrees[D].currentPage++;A._buildPage(D,A.pageData[D][A.activeTrees[D].currentPage][I.row],A.activeTrees[D].currentPage)}else{A.activeTrees[D].currentPage--}var E=(I.dir=="left")?-(A.activeTrees[D].width):A.activeTrees[D].width;new Effect.Move($(D+"_header_container"),{x:E,duration:0.5});Appcelerator.Compiler.fireCustomCondition(D,"click",{id:D,row:I.row,dir:I.dir,page:H,targetPage:A.activeTrees[D].currentPage})})}var B=$(D+"_header_container");B.style.width=(parseInt(this.activeTrees[D].options.width)*this.activeTrees[D].totalPages)+"px"},_buildPage:function(B,D,A){var L=$(B+"_header_container");var F=this.activeTrees[B].theme;var N=this.activeTrees[B].options;var E="";var I=parseInt(N.height)/(parseInt(N.rowHeight));var H=$(B+"_page_"+A);var G=false;if(!H){H=document.createElement("div");H.id=B+"_page_"+A;H.style.width=N.width;H.className=F+"_page";G=true}if(A!=0){E+='<div class="'+F+"_header "+F+'_header_detail" >';var J=(D[0].title)?D[0].title:N.title;E+='<div class="'+F+'_title" id="'+B+"_"+A+'_title">'+J+"</div>";E+='<div class="'+F+'_back_button" on="click then l:'+B+'_tree_shift[dir=right]"></div>'}else{E+='<div class="'+F+'_header" >';E+='<div class="'+F+'_title" id="'+B+"_"+A+'_title">'+N.title+"</div>"}E+="</div>";E+='<div class="'+F+'_content_container" style="height:'+N.height+';overflow:auto">';for(var C=0;C<D.length;C++){var M=D[C];if(M.children){E+=this._buildRow(B,true,M,A,C)}else{E+=this._buildRow(B,false,M,A)}}if(!M.template&&N.fillEmpty==true){var K=Math.floor(I-D.length);for(var C=1;C<K;C++){E+=this._buildRow(B,false,{},A)}}E+="</div></div>";H.innerHTML=E;Appcelerator.Compiler.dynamicCompile(H);if(G){L.appendChild(H)}},_buildRow:function(B,G,C,A,I){var E="";var F=this.activeTrees[B].theme;var J=this.activeTrees[B].options;if(C.template){var H=new Template($(C.template).innerHTML);E+="<div>"+H.evaluate(C.data)+"</div>"}else{var D=(A!=0)?F+"_item_detail":"";if(G==true){E+='<div class="'+F+"_item "+D+'" on="click then l:'+B+"_tree_shift[dir=left,row="+I+']" style="height:'+J.rowHeight+";line-height:"+J.rowHeight+'">'}else{E+='<div class="'+F+"_item "+D+'"  style="height:'+J.rowHeight+";line-height:"+J.rowHeight+'">'}E+='<div class="'+F+'_item_left">';if(C.icon){E+='<img class="'+F+'_item_icon" src="'+C.icon+'"/>'}E+=((C.data)?C.data:"")+"</div>";E+='<div class="'+F+'_item_right">';if(C.children){if(C.children.length==1){E+='<span class="'+F+'_item_more"></span>'}else{E+='<span class="'+F+'_item_count">('+C.children.length+")</span>"}}E+="</div></div>"}return E},_cachePageData:function(F,C,B,E){if(!this.pageData[F][B]){this.pageData[F][B]=new Array()}if(B!=0){this.pageData[F][B][E]=new Array()}for(var A=0;A<C.length;A++){var D=C[A];if(B==0){this.pageData[F][B][A]=D}else{this.pageData[F][B][E][A]=D}if(D.children){this._cachePageData(F,D.children,(B+1),A)}}this.activeTrees[F].totalPages++}});